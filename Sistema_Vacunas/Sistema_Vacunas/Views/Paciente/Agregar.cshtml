@model Sistema_Vacunas.Models.Pacientes
@{
    ViewBag.Title = "Agregar";
}

<!-- Page header -->
<div class="full-box page-header">
    <h3 class="text-left">
        <i class="fas fa-plus fa-fw"></i> &nbsp; Administracion de Pacientes
    </h3>
    <p class="text-justify">

    </p>
</div>

<!--CONTENT-->
<!-- Content here-->
<div class="container-fluid">
    @using (Html.BeginForm("Registrar", "Paciente", FormMethod.Post, new { id = "frm-productos" }))
    {
        @Html.HiddenFor(x => x.id_pacientes)
        <form action="" class="form-neon" autocomplete="off">
            <fieldset>
                <legend><i class="fas fa-user"></i> &nbsp; CREANDO NUEVO PACIENTES</legend>
                <div class="container-fluid">
                    <div class="row">
                        <div class="col-12 col-md-6">
                            <div class="form-group">
                                <label for="producto_DNI" class="bmd-label-floating">Dni:</label>
                                @Html.TextBoxFor(x => x.dni, new { @class = "form-control" })
                                @Html.ValidationMessageFor(x => x.dni, null, new { @class = "label label-danger" })
                            </div>
                        </div>
                        <div class="col-12 col-md-6">
                            <div class="form-group">
                                <label for="producto_nombre" class="bmd-label-floating">Nombres:</label>
                                @Html.TextBoxFor(x => x.nombre, new { @class = "form-control" })
                                @Html.ValidationMessageFor(x => x.nombre, null, new { @class = "label label-danger" })
                            </div>
                        </div>
                        <div class="col-12 col-md-6">
                            <div class="form-group">
                                <label for="producto_apellidos" class="bmd-label-floating">Apellidos:</label>
                                @Html.TextBoxFor(x => x.apellidos, new { @class = "form-control" })
                                @Html.ValidationMessageFor(x => x.apellidos, null, new { @class = "label label-danger" })
                            </div>
                        </div>
                        <div class="col-12 col-md-6">
                            <div class="form-group">
                                <label for="producto_direccion" class="bmd-label-floating">Direccion:</label>
                                @Html.TextBoxFor(x => x.direccion, new { @class = "form-control" })
                                @Html.ValidationMessageFor(x => x.direccion, null, new { @class = "label label-danger" })
                            </div>
                        </div>
                        <div class="col-12 col-md-6">
                            <div class="form-group">
                                <label for="producto_telefono" class="bmd-label-floating">Telfono / Celular:</label>
                                @Html.TextBoxFor(x => x.telefono, new { @class = "form-control" })
                                @Html.ValidationMessageFor(x => x.telefono, null, new { @class = "label label-danger" })
                            </div>
                        </div>
                        <div class="col-12 col-md-4">
                            <div class="form-group">
                                <label for="producto_email" class="bmd-label-floating">Email:</label>
                                @Html.TextBoxFor(x => x.email, new { @class = "form-control" })
                                @Html.ValidationMessageFor(x => x.email, null, new { @class = "label label-danger" })
                            </div>
                        </div>
                        <div class="col-12 col-md-4">
                            @Html.LabelFor(x => x.estado)
                            <select name="estado" class="form-control">
                                <option @(Model.estado == "A" ? "selected" : "") value="A">Activo</option>
                                <option @(Model.estado == "I" ? "selected" : "") value="I">Inactivo</option>
                            </select>
                            @Html.ValidationMessageFor(x => x.estado, null, new { @class = "label label-danger" })
                        </div>
                    </div>
                </div>
            </fieldset>
            <br><br><br>
                    <p class="text-center" style="margin-top: 40px;">
                        <button type="submit" class="btn btn-primary"><i class="far fa-save"></i> &nbsp; Registrar</button>
                        &nbsp; &nbsp;
                        <a href="~/Paciente" class="btn btn-danger" type="reset">Cancelar</a>
                    </p>
        </form>
    }
</div>